--- a/arch/mips/amazon/dma-core.c
+++ b/arch/mips/amazon/dma-core.c
@@ -1387,7 +1387,7 @@ static int dma_init(void)
 		AMAZON_DMA_EMSG("cannot register device dma-core!\n");
 		return result;
 	}
-	result = request_irq(AMAZON_DMA_INT, dma_interrupt, SA_INTERRUPT, "dma-core", (void *) &dma_interrupt);
+	result = request_irq(AMAZON_DMA_INT, dma_interrupt, IRQF_DISABLED, "dma-core", (void *) &dma_interrupt);
 	if (result) {
 		AMAZON_DMA_EMSG("error, cannot get dma_irq!\n");
 		free_irq(AMAZON_DMA_INT, (void *) &dma_interrupt);
--- a/arch/mips/amazon/interrupt.c
+++ b/arch/mips/amazon/interrupt.c
@@ -157,7 +157,7 @@ out:
 
 static struct irqaction cascade = {
 	.handler	= no_action,
-	.flags  	= SA_INTERRUPT,
+	.flags  	= IRQF_DISABLED,
 	.name   	= "cascade",
 };
 
--- a/arch/mips/amazon/setup.c
+++ b/arch/mips/amazon/setup.c
@@ -107,7 +107,7 @@ static void amazon_timer6_interrupt(int 
 
 static struct irqaction hrt_irqaction = {
 	.handler = amazon_timer6_interrupt,
-	.flags = SA_INTERRUPT,
+	.flags = IRQF_DISABLED,
 	.name = "hrt",
 };
 
--- a/drivers/atm/amazon_tpe.c
+++ b/drivers/atm/amazon_tpe.c
@@ -2404,13 +2404,13 @@ amazon_atm_dev_t * amazon_atm_create(voi
 
 
 	// Register interrupts for insertion and extraction
-	request_irq(AMAZON_SWIE_INT, amazon_atm_swie_isr, SA_INTERRUPT, "tpe_swie", NULL);
-	request_irq(AMAZON_CBM_INT, amazon_atm_cbm_isr, SA_INTERRUPT, "tpe_cbm", NULL);
+	request_irq(AMAZON_SWIE_INT, amazon_atm_swie_isr, IRQF_DISABLED, "tpe_swie", NULL);
+	request_irq(AMAZON_CBM_INT, amazon_atm_cbm_isr, IRQF_DISABLED, "tpe_cbm", NULL);
 #ifdef AMAZON_ATM_DEBUG
-	request_irq(AMAZON_HTU_INT , amazon_atm_htu_isr, SA_INTERRUPT, "tpe_htu", NULL);
+	request_irq(AMAZON_HTU_INT , amazon_atm_htu_isr, IRQF_DISABLED, "tpe_htu", NULL);
 #endif
 #ifdef AMAZON_TPE_TEST_AAL5_INT	
-	request_irq(AMAZON_AAL5_INT, amazon_atm_aal5_isr, SA_INTERRUPT, "tpe_aal5", NULL);
+	request_irq(AMAZON_AAL5_INT, amazon_atm_aal5_isr, IRQF_DISABLED, "tpe_aal5", NULL);
 #endif
 	return &g_atm_dev;
 }
